//--------------------------------------------------------------
// Mixins
//--------------------------------------------------------------

// REM with PX fallback
// @include rem(font-size, 16px);
// @include rem(margin, 10px 5px 5px 10px);
@function parseInt($n) {
	@return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
	$px : ();
	$rem: ();

	$root: 10;

	@each $value in $values {
		@if $value == 0 or $value == auto {
			$px : append($px , $value);
			$rem: append($rem, $value);
		}

		@else if type-of($value) == number {
			$unit: unit($value);
			$val: parseInt($value);

			@if $unit == "px" {
				$px : append($px,  $value);
				$rem: append($rem, ($val / $root + rem));
			}

			@if $unit == "rem" {
				$px : append($px,  ($val * $root + px));
				$rem: append($rem, $value);
			}
		}

		@else {
			$px : append($px,  $value);
			$rem: append($rem, $value);
		}
	}

	@if $px == $rem {
		#{$property}: $px;
	} @else {
		#{$property}: $px;
		#{$property}: $rem;
	}
}

@function rem($value) {
	$root: $font-size;
	$val: parseInt($value);
	$return: ();

	@if unit($value) == "px" {
		$return: append($return, ($val / $root + rem));
	} @else {
		$return: append($return, ($val * $root + px));
	}

	@return $return;
}

// Transitions
@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition: $transition-property $transition-time $method;
	-ms-transition: $transition-property $transition-time $method;
	-o-transition: $transition-property $transition-time $method;
	transition: $transition-property $transition-time $method;
}

//	Media Queries using Sass List Maps 
//	Define our breakpoints in $breakpoints variable and assign key value pairs in ems. 
//	Em to px calculation varies based on the default font-size.

$breakpoints: (
	large: 71.25em, 
	medium: 48em,
	small: 30em
);

@mixin wider-than($screen-size) {
	@if map-has-key($breakpoints, $screen-size) {
		@media (min-width: map-get($breakpoints, $screen-size)) {
			@content;
		}
	} @else {
		// Debugging - can be used thanks to map-has-key() instead of loop
		@warn "Breakpoint '#{$screen-size}' does not exist!"
	}
}

// Omega Reset
@mixin omega-reset($nth) {
	&:nth-child(#{$nth}) { margin-right: flex-gutter($grid-columns, $gutter); }
	&:nth-child(#{$nth}+1) { clear: none }
}
